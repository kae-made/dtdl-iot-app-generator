<#
  // Copyright (c) Knowledge & Experience. All rights reserved.
  // Licensed under the MIT license. See LICENSE file in the project root for full license information.
#>
<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// ------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン: <#= Version #>
//  
//     このファイルへの変更は、正しくない動作の原因になる可能性があり、
//     コードが再生成されると失われます。
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Kae.IoT.Framework;
using Microsoft.Azure.Devices.Client;

namespace <#= nameSpace #>
{
    interface IIoTApp
    {
        AppDTDesiredProperties DesiredProperties
        {
            get;
            set;
        }

        Task DoWorkAsync(CancellationTokenSource cancellationTokenSource);

<# 
        foreach (var dmName in syncDirectMethods.Keys) {
#>
        string <#= dmName #>(string payload);
<# 
        }
#>

<# 
        foreach (var dmName in asyncDirectMethods.Keys) {
#>
        string <#= dmName #>(string payload);
<# 
        }
#>

        IoTDataWithProperties GetAppD2CData();

<#
    foreach (var telemetryInfo in dtTelemetries.Values)
    {
        var telemetry = telemetryInfo.Info;
        string telmetryDataTypeName = $"D2CData_{telemetry.Name}";
        string getD2CDataMethodName = $"Get{telmetryDataTypeName}";
#>
        <#= telmetryDataTypeName #> <#= getD2CDataMethodName #>();
<#
    }
#>

        Task ReceivedC2DDataAsync(Message data);
        Task UpdatedDTDesiredPropertiesAsync(AppDTDesiredProperties dp);

        Task UserPreInitializeAsync();
        Task UserPostInitializeAsync();
        Task UserPreTerminateAsync();
        Task UserPostTerminateAsync();
    }

}
