<#
  // Copyright (c) Knowledge & Experience. All rights reserved.
  // Licensed under the MIT license. See LICENSE file in the project root for full license information.
#>
<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.Azure.DigitalTwins.Parser" #>
<#@ import namespace="Kae.IoT.PnP.Generator" #>
<#= indent #><#= scopeName #> class <#= typeName #>
<#= indent #>{
<#  
    var schema = schemaInfo.Info;
    indent += indentUnit;
    foreach(var field in schema.Fields)
    {
        var fieldDeclGen = CreateFieldDecl(indentUnit, indent, field.Name, field.Schema);
        var fieldDeclContent = fieldDeclGen.TransformText();
    #>
<#= fieldDeclContent #>
<# 
    }
    indent = indent.Substring(0, indent.Length - indentUnit.Length); #>
<#= indent #>}
